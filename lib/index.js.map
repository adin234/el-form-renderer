{"version":3,"sources":["../src/index.js"],"names":["AFHConvert","RenderFormItem","RenderFormGroup","Form","converter","render","h","props","_props","model","value","ref","content","map","item","index","$id","undefined","$default","updateValue","id","data","attrs","key","itemValue","disabled","on","$type","concat","$slots","default","components","mounted","$nextTick","methods","forEach","$refs","elForm","type","Array","required","Boolean","initialValue","convertHalfWidth","checkifChanged","$emit","setInitialValue","initValue","str","toHalfWidth","getFormValue"],"mappings":"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","file":"index.js","sourcesContent":["import AFHConvert from 'ascii-fullwidth-halfwidth-convert'\n\nimport RenderFormItem from './render-form-item'\nimport RenderFormGroup from './render-form-group'\n\nimport { Form } from 'element-ui'\n\nconst converter = new AFHConvert();\n\nexport default {\n  render (h) {\n    return h(\n      'el-form', {\n        props: Object.assign({}, this._props, {\n          model: this.value // 用于校验\n        }),\n        ref: 'elForm'\n      },\n      this.content\n        .map((item, index) => {\n          // handle default value\n          if (item.$id && this.value[item.$id] === undefined && item.$default !== undefined) {\n            this.updateValue({ id: item.$id, value: item.$default })\n          }\n          const data = {\n            attrs: {\n              id: `el-form--${item.$id}`,\n            },\n            props: {\n              key: index,\n              data: item,\n              value: this.value,\n              itemValue: this.value[item.$id],\n              disabled: this.disabled\n            },\n            on: {\n              updateValue: this.updateValue\n            }\n          }\n          if (item.$type === 'group') return h('render-form-group', data)\n          else return h('render-form-item', data)\n        })\n        .concat(this.$slots.default)\n    )\n  },\n  components: {\n    RenderFormItem,\n    RenderFormGroup\n  },\n  mounted () {\n    this.$nextTick(() => {\n      Object.keys(Form.methods).forEach((item) => {\n        this[item] = this.$refs.elForm[item]\n      })\n    })\n  },\n  props: Object.assign({}, Form.props, {\n    content: {\n      type: Array,\n      required: true\n    },\n    // 禁用所有表单\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n  }),\n  data () {\n    return {\n      value: {}, // 表单数据对象\n      initialValue: null\n    }\n  },\n  methods: {\n    /**\n     * 更新表单数据\n     * @param  {String} options.id 表单ID\n     * @param  {All} options.value 表单数据\n     */\n    updateValue ({ id, value }) {\n      this.value = Object.assign({}, this.value, {\n        [id]: this.convertHalfWidth(value)\n      })\n\n      if (this.initialValue !== null) {\n        this.checkifChanged(id)\n      }\n    },\n    checkifChanged(id) {\n      this.$emit('hasChanges', this.initialValue[id] !== this.value[id]);\n    },\n    setInitialValue (initValue) {\n      this.initialValue = initValue;\n    },\n    convertHalfWidth (str) {\n      if (typeof str === 'string') {\n        return converter.toHalfWidth(str)\n      }\n\n      return str\n    },\n    // 对外提供获取表单数据的函数\n    getFormValue () {\n      return this.value\n    }\n  }\n}\n"]}