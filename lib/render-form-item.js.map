{"version":3,"sources":["../src/render-form-item.js"],"names":["mixinOptionExtensions","mixinEnableWhen","toCamelCase","isObject","validator","data","Error","$id","$type","mixins","props","Object","itemValue","value","disabled","Boolean","computed","_show","getEnableWhenSatatus","render","h","class","indexOf","prop","label","rules","Array","isArray","attrs","$attrs","style","renderFormItemContent","methods","obj","$el","elType","childElements","valid","forEach","e","push","slot","optRenderer","$options","map","filter","on","input","$emit","id"],"mappings":"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","file":"render-form-item.js","sourcesContent":["import mixinOptionExtensions from './mixin-package-option'\nimport mixinEnableWhen from './mixin-enable-when'\nimport { toCamelCase, isObject } from './utils'\n\nfunction validator (data) {\n  if (!data) {\n    throw new Error('item data must be an Object.')\n  } else if (!data.$id) {\n    throw new Error('item $id is unvalidated.')\n  } else if (!data.$type) {\n    throw new Error('item $type is unvalidated.')\n  }\n}\n\nexport default {\n  mixins: [mixinOptionExtensions, mixinEnableWhen],\n  props: {\n    data: Object,\n    itemValue: {},\n    value: Object,\n    disabled: Boolean\n  },\n  computed: {\n    // 是否显示\n    _show () {\n      return this.getEnableWhenSatatus()\n    }\n  },\n  render (h) {\n    validator(this.data) // 对数据进行简单校验\n    return h(\n      'el-form-item', {\n        class: ~this.data.$type.indexOf('-group') ? 'has-radios': '',\n        props: {\n          prop: this.data.$id,\n          label: this.data.label,\n          rules: this._show && Array.isArray(this.data.rules) ? this.data.rules : []\n        },\n        attrs: this.data.$attrs,\n        style: !this._show ? 'display: none;' : ''// 使用 v-show 减少 dom 操作\n      },\n      [\n        this.renderFormItemContent(h, this.data, this.itemValue)\n      ]\n    )\n  },\n  methods: {\n    /**\n     * 渲染表单项的内容\n     * @param  {Object} data 表单属性定义\n     * @param  {All} value 单项表单数据值\n     */\n    renderFormItemContent (h, data, value) {\n      let obj = isObject(data.$el) ? data.$el : {}\n      let elType = data.$type === 'checkbox-button' ? 'checkbox-group' : data.$type\n      let props = Object.assign({}, obj, { value })\n      this.disabled && (props.disabled = this.disabled) // 只能全局禁用, false时不处理\n      let childElements = []\n      const valid = ['append', 'prepend']\n\n      valid.forEach(e => {\n        if (obj[e]) {\n          childElements.push(h('span', { slot: e }, [obj[e]]))\n        }\n      })\n\n      childElements.push(\n        (() => {\n          let optRenderer = this[`${toCamelCase(data.$type)}_opt`]\n          if (typeof optRenderer === 'function' && Array.isArray(data.$options)) {\n            return data.$options.map(optRenderer)\n          }\n        })())\n\n      childElements = childElements.filter(Boolean)\n\n      return h('el-' + elType, {\n        attrs: props, // 用于支持placeholder等原生属性(同时造成dom上挂载一些props)\n        props,\n        on: {\n          // 手动更新表单数据\n          input: (value) => {\n            this.$emit('updateValue', { id: data.$id, value })\n          },\n          ...(data.$attrs || {}).on,\n        }\n      }, childElements)\n    }\n  }\n}\n"]}